{"ast":null,"code":"export function abbreviate_number(num, fixed) {\n  if (num === null) {\n    return null;\n  } // terminate early\n\n\n  if (num === 0) {\n    return '0';\n  } // terminate early\n\n\n  fixed = !fixed || fixed < 0 ? 0 : fixed; // number of decimal places to show\n\n  var b = num.toPrecision(2).split(\"e\"),\n      // get power\n  k = b.length === 1 ? 0 : Math.floor(Math.min(b[1].slice(1), 14) / 3),\n      // floor at decimals, ceiling at trillions\n  c = k < 1 ? num.toFixed(0 + fixed) : (num / Math.pow(10, k * 3)).toFixed(1 + fixed),\n      // divide by power\n  d = c < 0 ? c : Math.abs(c),\n      // enforce -0 is 0\n  e = d + ['', 'K', 'M', 'B', 'T'][k]; // append power\n\n  return e;\n}\nexport function add_commas(num) {}","map":{"version":3,"sources":["/home/ubuntu/beamr/frontend/youtube-clone-frontend/src/helpers.js"],"names":["abbreviate_number","num","fixed","b","toPrecision","split","k","length","Math","floor","min","slice","c","toFixed","pow","d","abs","e","add_commas"],"mappings":"AAAA,OAAO,SAASA,iBAAT,CAA2BC,GAA3B,EAAgCC,KAAhC,EAAuC;AAC1C,MAAID,GAAG,KAAK,IAAZ,EAAkB;AAAE,WAAO,IAAP;AAAc,GADQ,CACP;;;AACnC,MAAIA,GAAG,KAAK,CAAZ,EAAe;AAAE,WAAO,GAAP;AAAa,GAFY,CAEX;;;AAC/BC,EAAAA,KAAK,GAAI,CAACA,KAAD,IAAUA,KAAK,GAAG,CAAnB,GAAwB,CAAxB,GAA4BA,KAApC,CAH0C,CAGC;;AAC3C,MAAIC,CAAC,GAAIF,GAAD,CAAMG,WAAN,CAAkB,CAAlB,EAAqBC,KAArB,CAA2B,GAA3B,CAAR;AAAA,MAAyC;AACrCC,EAAAA,CAAC,GAAGH,CAAC,CAACI,MAAF,KAAa,CAAb,GAAiB,CAAjB,GAAqBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,GAAL,CAASP,CAAC,CAAC,CAAD,CAAD,CAAKQ,KAAL,CAAW,CAAX,CAAT,EAAwB,EAAxB,IAA8B,CAAzC,CAD7B;AAAA,MAC0E;AACtEC,EAAAA,CAAC,GAAGN,CAAC,GAAG,CAAJ,GAAQL,GAAG,CAACY,OAAJ,CAAY,IAAIX,KAAhB,CAAR,GAAiC,CAACD,GAAG,GAAGO,IAAI,CAACM,GAAL,CAAS,EAAT,EAAaR,CAAC,GAAG,CAAjB,CAAP,EAA6BO,OAA7B,CAAqC,IAAIX,KAAzC,CAFzC;AAAA,MAE0F;AACtFa,EAAAA,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQA,CAAR,GAAYJ,IAAI,CAACQ,GAAL,CAASJ,CAAT,CAHpB;AAAA,MAGiC;AAC7BK,EAAAA,CAAC,GAAGF,CAAC,GAAG,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyBT,CAAzB,CAJZ,CAJ0C,CAQD;;AACzC,SAAOW,CAAP;AACD;AAEH,OAAO,SAASC,UAAT,CAAoBjB,GAApB,EAAyB,CAE/B","sourcesContent":["export function abbreviate_number(num, fixed) {\n    if (num === null) { return null; } // terminate early\n    if (num === 0) { return '0'; } // terminate early\n    fixed = (!fixed || fixed < 0) ? 0 : fixed; // number of decimal places to show\n    var b = (num).toPrecision(2).split(\"e\"), // get power\n        k = b.length === 1 ? 0 : Math.floor(Math.min(b[1].slice(1), 14) / 3), // floor at decimals, ceiling at trillions\n        c = k < 1 ? num.toFixed(0 + fixed) : (num / Math.pow(10, k * 3) ).toFixed(1 + fixed), // divide by power\n        d = c < 0 ? c : Math.abs(c), // enforce -0 is 0\n        e = d + ['', 'K', 'M', 'B', 'T'][k]; // append power\n    return e;\n  }\n\nexport function add_commas(num) {\n    \n}"]},"metadata":{},"sourceType":"module"}