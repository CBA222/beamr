{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/beamr/frontend/youtube-clone-frontend/src/Results.js\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport { FormProvider } from \"react-hook-form\";\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nconst Results = props => {\n  const [items, setItems] = useState([]);\n\n  function fetchMoreData() {\n    fetch(\"/search?start=0&num=12\", {}).then(response => response.json()).then(data => {\n      setItems(items.concat(data['data']));\n    });\n  }\n\n  useEffect(() => {\n    fetch(\"/search?start=0&num=12\", {}).then(response => response.json()).then(data => {\n      setItems(items.concat(data['data']));\n      console.log(data);\n    });\n  }, [props.location]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"search-results\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"RESULTS\", /*#__PURE__*/React.createElement(\"div\", {\n    class: \"results-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n    dataLength: items.length,\n    next: fetchMoreData,\n    hasMore: true,\n    scrollableTarget: \"videos-container\",\n    loader: /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, \"Loading...\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, items.map(val => /*#__PURE__*/React.createElement(VideoItem, {\n    title: val.title,\n    view_count: val.view_count,\n    upload_date: val.upload_date,\n    video_length: val.video_length,\n    static_url: val.static_url,\n    animated_url: val.animated_url,\n    channel: val.channel,\n    video_url: val.video_url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  })))));\n};\n\nfunction VideoItem(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"result-video-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, props.title);\n}\n\nexport default Results;","map":{"version":3,"sources":["/home/ubuntu/beamr/frontend/youtube-clone-frontend/src/Results.js"],"names":["React","Component","useEffect","useState","FormProvider","InfiniteScroll","Results","props","items","setItems","fetchMoreData","fetch","then","response","json","data","concat","console","log","location","length","map","val","title","view_count","upload_date","video_length","static_url","animated_url","channel","video_url","VideoItem"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AAEA,WAASO,aAAT,GAAyB;AAEvBC,IAAAA,KAAK,CAAC,wBAAD,EAA2B,EAA3B,CAAL,CAECC,IAFD,CAEMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFlB,EAGCF,IAHD,CAGMG,IAAI,IAAI;AACVN,MAAAA,QAAQ,CAACD,KAAK,CAACQ,MAAN,CAAaD,IAAI,CAAC,MAAD,CAAjB,CAAD,CAAR;AAEH,KAND;AAOD;;AAEDb,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAAC,wBAAD,EAA2B,EAA3B,CAAL,CAECC,IAFD,CAEMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFlB,EAGCF,IAHD,CAGMG,IAAI,IAAI;AACVN,MAAAA,QAAQ,CAACD,KAAK,CAACQ,MAAN,CAAaD,IAAI,CAAC,MAAD,CAAjB,CAAD,CAAR;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH,KAND;AAOD,GARQ,EAQN,CAACR,KAAK,CAACY,QAAP,CARM,CAAT;AAUA,sBACE;AAAK,IAAA,KAAK,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEE;AAAK,IAAA,KAAK,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,UAAU,EAAEX,KAAK,CAACY,MADpB;AAEE,IAAA,IAAI,EAAEV,aAFR;AAGE,IAAA,OAAO,EAAE,IAHX;AAIE,IAAA,gBAAgB,EAAC,kBAJnB;AAKE,IAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMOF,KAAK,CAACa,GAAN,CAAWC,GAAD,iBACP,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEA,GAAG,CAACC,KADf;AAEI,IAAA,UAAU,EAAED,GAAG,CAACE,UAFpB;AAGI,IAAA,WAAW,EAAEF,GAAG,CAACG,WAHrB;AAII,IAAA,YAAY,EAAEH,GAAG,CAACI,YAJtB;AAKI,IAAA,UAAU,EAAEJ,GAAG,CAACK,UALpB;AAMI,IAAA,YAAY,EAAEL,GAAG,CAACM,YANtB;AAOI,IAAA,OAAO,EAAEN,GAAG,CAACO,OAPjB;AAQI,IAAA,SAAS,EAAEP,GAAG,CAACQ,SARnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CANP,CADF,CAFF,CADF;AA0BH,CAnDD;;AAqDA,SAASC,SAAT,CAAmBxB,KAAnB,EAA0B;AACxB,sBACE;AAAK,IAAA,KAAK,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACgB,KADT,CADF;AAKD;;AAED,eAAejB,OAAf","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\nimport { FormProvider } from \"react-hook-form\";\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nconst Results = (props) => {\n\n    const [items, setItems] = useState([]);\n\n    function fetchMoreData() {\n\n      fetch(\"/search?start=0&num=12\", {\n      })\n      .then(response => response.json())\n      .then(data => {\n          setItems(items.concat(data['data']))\n          \n      })\n    }\n\n    useEffect(() => {\n      fetch(\"/search?start=0&num=12\", {\n      })\n      .then(response => response.json())\n      .then(data => {\n          setItems(items.concat(data['data']));\n          console.log(data);\n      })\n    }, [props.location]);\n  \n    return (\n      <div class=\"search-results\">\n        RESULTS\n        <div class=\"results-list\">\n          <InfiniteScroll\n            dataLength={items.length}\n            next={fetchMoreData}\n            hasMore={true}\n            scrollableTarget=\"videos-container\"\n            loader={<h4>Loading...</h4>}>\n                {items.map((val) => (\n                    <VideoItem \n                        title={val.title} \n                        view_count={val.view_count} \n                        upload_date={val.upload_date}\n                        video_length={val.video_length}\n                        static_url={val.static_url}\n                        animated_url={val.animated_url}\n                        channel={val.channel}\n                        video_url={val.video_url}\n                    />\n                ))}\n            </InfiniteScroll>\n        </div>\n      </div>\n    )\n}\n\nfunction VideoItem(props) {\n  return (\n    <div class=\"result-video-item\">\n      {props.title}\n    </div>\n  )\n}\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}